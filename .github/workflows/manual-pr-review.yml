name: "✅ Manual PR Review & Merge"

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to review and merge'
        required: true
        type: number
      action:
        description: 'Action to take'
        required: true
        type: choice
        options:
          - 'approve-and-merge'
          - 'approve-only'
          - 'just-merge'
          - 'request-changes'
        default: 'approve-and-merge'

permissions:
  contents: write
  pull-requests: write

jobs:
  manual-review:
    name: "Manual PR Action"
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
      
      - name: ✅ Approve PR
        if: inputs.action == 'approve-and-merge' || inputs.action == 'approve-only'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ inputs.pr_number }},
              event: 'APPROVE',
              body: '✅ **Manually Approved via Workflow**\n\nReviewed and approved by workflow trigger.'
            });
            console.log('✅ PR approved');
      
      - name: 🔄 Merge PR
        if: inputs.action == 'approve-and-merge' || inputs.action == 'just-merge'
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const result = await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: ${{ inputs.pr_number }},
                merge_method: 'squash',
                commit_title: 'Manually merged PR #${{ inputs.pr_number }}',
                commit_message: 'Reviewed and merged via manual workflow trigger'
              });
              
              console.log('✅ PR merged successfully');
              
              // Get PR details to find related issues
              const pr = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: ${{ inputs.pr_number }}
              });
              
              // Close related issues
              const body = pr.data.body || '';
              const issue_numbers = body.match(/#(\d+)/g);
              
              if (issue_numbers) {
                for (const issue_ref of issue_numbers) {
                  const issue_number = parseInt(issue_ref.replace('#', ''));
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue_number,
                    body: `✅ Fixed by PR #${{ inputs.pr_number }} (manually merged)`
                  });
                  await github.rest.issues.update({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue_number,
                    state: 'closed'
                  });
                  console.log(`Closed issue #${issue_number}`);
                }
              }
              
            } catch (error) {
              console.error('❌ Merge failed:', error.message);
              core.setFailed(`Failed to merge: ${error.message}`);
            }
      
      - name: ❌ Request Changes
        if: inputs.action == 'request-changes'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ inputs.pr_number }},
              event: 'REQUEST_CHANGES',
              body: '⚠️ **Changes Requested via Workflow**\n\nPlease address the issues and update the PR.'
            });
            console.log('⚠️ Changes requested');
      
      - name: 📊 Summary
        run: |
          echo "## Manual PR Review Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**PR**: #${{ inputs.pr_number }}" >> $GITHUB_STEP_SUMMARY
          echo "**Action**: ${{ inputs.action }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Action completed successfully" >> $GITHUB_STEP_SUMMARY
