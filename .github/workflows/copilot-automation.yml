name: "🤖 Copilot Auto-Assign & Auto-Review"

on:
  issues:
    types: [opened, labeled]
  pull_request:
    types: [opened, synchronize, ready_for_review]

permissions:
  contents: write
  issues: write
  pull-requests: write
  actions: read

jobs:
  auto-assign-copilot:
    name: "🤖 Auto-Assign Copilot to Issue"
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
      
      - name: 🤖 Assign Copilot to Issue
        uses: actions/github-script@v7
        with:
          script: |
            const issue_number = context.issue.number;
            const labels = context.payload.issue.labels.map(l => l.name);
            
            // Add comment to trigger Copilot
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: `🤖 **GitHub Copilot Auto-Assigned**
              
              @copilot I've been assigned to this issue. Let me analyze it and create a fix.
              
              **Issue Type**: ${labels.join(', ')}
              **Priority**: ${labels.includes('workflow-failure') ? '🔴 HIGH' : '🟡 MEDIUM'}
              
              I'll:
              1. Analyze the problem
              2. Research the best solution
              3. Create a pull request with the fix
              4. Request review from the auto-reviewer
              
              _Estimated time: 2-5 minutes_`
            });
            
            // Add "copilot-assigned" label
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              labels: ['copilot-assigned', 'in-progress']
            });
            
            console.log(`✅ Copilot assigned to issue #${issue_number}`);
  
  auto-review-pr:
    name: "🔍 Auto-Review Pull Request"
    if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      
      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: 📦 Install Dependencies
        run: |
          pip install PyGithub requests pyyaml
      
      - name: 🏷️ Auto-Label PR
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const labels_to_add = [];
            
            // Check PR title/body for keywords
            const title = pr.title.toLowerCase();
            const body = (pr.body || '').toLowerCase();
            const text = title + ' ' + body;
            
            // Auto-label based on content
            if (text.includes('fix') || text.includes('bug')) {
              labels_to_add.push('bug-fix');
            }
            if (text.includes('workflow') || text.includes('ci') || text.includes('action')) {
              labels_to_add.push('workflow');
            }
            if (text.includes('docs') || text.includes('documentation') || text.includes('readme')) {
              labels_to_add.push('documentation');
            }
            if (text.includes('automated') || text.includes('auto-fix')) {
              labels_to_add.push('automated-fix');
            }
            
            // Check if PR is from a branch with "auto-fix" or "copilot" in name
            const branch = pr.head.ref.toLowerCase();
            if (branch.includes('auto-fix') || branch.includes('copilot') || branch.includes('fix')) {
              labels_to_add.push('automated-fix');
            }
            
            if (labels_to_add.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                labels: labels_to_add
              });
              console.log(`Added labels: ${labels_to_add.join(', ')}`);
            }
      
      - name: 🔍 Analyze PR Changes
        id: analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python .github/scripts/auto_reviewer.py \
            --repo "${{ github.repository }}" \
            --pr-number "${{ github.event.pull_request.number }}"
      
      - name: ✅ Auto-Approve (if safe)
        if: steps.analyze.outputs.verdict == 'APPROVE'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              event: 'APPROVE',
              body: `🤖 **Auto-Review: APPROVED**
              
              ✅ All safety checks passed
              ✅ No critical files modified
              ✅ Changes align with issue description
              ✅ Code quality standards met
              
              **Analysis Summary:**
              ${{ steps.analyze.outputs.summary }}
              
              **Auto-merging in 30 seconds...**
              
              _If you want to review manually, disable auto-merge with: \`@github-copilot pause auto-merge\`_`
            });
      
      - name: 🔄 Auto-Merge (if approved)
        if: steps.analyze.outputs.verdict == 'APPROVE' && steps.analyze.outputs.auto_merge == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            // Wait 30 seconds for human override
            await new Promise(resolve => setTimeout(resolve, 30000));
            
            try {
              // Enable auto-merge
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                merge_method: 'squash',
                commit_title: `${{ github.event.pull_request.title }} (#${{ github.event.pull_request.number }})`,
                commit_message: 'Auto-merged by Copilot Auto-Reviewer'
              });
              
              console.log('✅ PR auto-merged successfully');
              
              // Close related issue if exists
              const issue_numbers = context.payload.pull_request.body.match(/#(\d+)/g);
              if (issue_numbers) {
                for (const issue_ref of issue_numbers) {
                  const issue_number = parseInt(issue_ref.replace('#', ''));
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue_number,
                    body: `✅ Fixed by PR #${{ github.event.pull_request.number }} (auto-merged)`
                  });
                  await github.rest.issues.update({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue_number,
                    state: 'closed',
                    labels: ['completed', 'auto-fixed']
                  });
                }
              }
            } catch (error) {
              console.log('⚠️ Auto-merge failed:', error.message);
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `⚠️ Auto-merge failed. Manual merge required.\n\nError: ${error.message}`
              });
            }
      
      - name: ❌ Request Changes (if unsafe)
        if: steps.analyze.outputs.verdict == 'REQUEST_CHANGES'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              event: 'REQUEST_CHANGES',
              body: `🤖 **Auto-Review: CHANGES REQUESTED**
              
              ⚠️ Safety concerns detected
              
              **Issues Found:**
              ${{ steps.analyze.outputs.issues }}
              
              **Required Changes:**
              ${{ steps.analyze.outputs.required_changes }}
              
              Please address these concerns before merging.
              
              _Tag @copilot to regenerate the fix_`
            });
      
      - name: 💬 Comment (if needs human review)
        if: steps.analyze.outputs.verdict == 'COMMENT'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              event: 'COMMENT',
              body: `🤖 **Auto-Review: MANUAL REVIEW REQUIRED**
              
              ⚠️ This PR modifies critical files or requires human judgment
              
              **Analysis:**
              ${{ steps.analyze.outputs.summary }}
              
              **Critical Files Modified:**
              ${{ steps.analyze.outputs.critical_files }}
              
              Please review carefully before merging.`
            });
      
      - name: 📊 Generate Summary
        if: always()
        run: |
          echo "## 🤖 Auto-Reviewer Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**PR**: #${{ github.event.pull_request.number }}" >> $GITHUB_STEP_SUMMARY
          echo "**Verdict**: ${{ steps.analyze.outputs.verdict }}" >> $GITHUB_STEP_SUMMARY
          echo "**Auto-Merge**: ${{ steps.analyze.outputs.auto_merge }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Summary" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.analyze.outputs.summary }}" >> $GITHUB_STEP_SUMMARY
